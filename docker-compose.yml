x-environment: &common-env
  FEMBOYFANS_HOSTNAME: http://localhost:${EXPOSED_SERVER_PORT:-4000}
  FEMBOYFANS_REDIS_URL: redis://redis
  FEMBOYFANS_OPENSEARCH_HOST: opensearch
  FEMBOYFANS_MEMCACHED_SERVERS: memcached
  FEMBOYFANS_IQDB_SERVER: http://iqdb:5588
  FEMBOYFANS_RECOMMENDER_SERVER: http://recommender:5000
  # Must be externally accessible
  FEMBOYFANS_REPORTS_SERVER: http://localhost:${EXPOSED_SERVER_PORT:-4000}/reports
  # Must be internally accessible
  FEMBOYFANS_REPORTS_SERVER_INTERNAL: http://reports:3000
  FEMBOYFANS_REPORTS_ENABLED: 1
  FEMBOYFANS_REPORT_KEY: super_secret_key_for_reports_signature
  # These are just development secrets, do not use them in production
  FEMBOYFANS_PROTECTED_FILE_SECRET: 6686a6413d90c43d5e82403ef271ec25d13cc24e3bfcdd094e73d1eff22a3567
  FEMBOYFANS_REPLACEMENT_FILE_SECRET: b35bc54cdc0d0436fc5867c7ef88f9b10a37ae20a06b37e67614fe60019d7bb1
  SECRET_TOKEN: 1c58518a891eff4520cadc59afa9e378a9325f1247544ff258096e497f095f45
  SESSION_SECRET_KEY: 44b4f44e9f253c406cbe727d403d500c1cecff943e4d2aea8f5447f28846fffe
  # Hide annoying output from libvips on corrupt files
  VIPS_WARNING: "0"

x-depends-on: &common-depends-on
  opensearch:
    condition: service_healthy
  memcached:
    condition: service_started
  postgres:
    condition: service_started
  redis:
    condition: service_started

services:
  zoobooru:
    build:
      context: .
      args:
        HOST_UID: ${HOST_UID:-1000}
        HOST_GID: ${HOST_GID:-1000}
    user: ${DOCKER_USER:-root}
    image: zoobooru
    volumes:
      - .:/app
      - node_modules:/app/node_modules
      - post_data:/app/public/data
      - ./docker/cron_tasks/daily:/etc/periodic/daily
    environment:
      <<: *common-env
      RAILS_ENV: development
      DB_USER: zoobooru
      DB_NAME: zoobooru_development
    depends_on:
      <<: *common-depends-on
      autocompleted:
        condition: service_started
      iqdb:
        condition: service_started
      recommender:
        condition: service_started
      redis:
        condition: service_healthy
      reports:
        condition: service_started
    tty: true

  # For this service to work properly, it must be accessible from /tags/autocomplete.json on the same url as the primary app
  autocompleted:
    image: ghcr.io/e621ng/autocompleted:8807bc8658f594cd0de04de1c272c3a2f917fc48
    command: /app/autocompleted
    environment:
      SERVER_ADDR: autocompleted:8118
      PG__USER: zoobooru
      PG__HOST: postgres
      PG__PORT: 5432
      PG__DBNAME: zoobooru_development
      PG__POOL__MAX_SIZE: 1

  nginx:
    image: nginx:stable-alpine
    volumes:
      - ./public:/app/public
      - post_data:/app/public/data
      - ./docker/default.conf.template:/etc/nginx/templates/default.conf.template
    environment:
      <<: *common-env
      NGINX_PORT: ${EXPOSED_SERVER_PORT:-4000}
    depends_on:
      - autocompleted
      - zoobooru
    ports:
      - "${EXPOSED_SERVER_PORT:-4000}:${EXPOSED_SERVER_PORT:-4000}"

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=zoobooru
      - POSTGRES_DB=zoobooru_development
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "${EXPOSED_POSTGRES_PORT:-34528}:5432"

  clickhouse:
    image: clickhouse/clickhouse-server:latest-alpine
    cap_add:
      - NET_ADMIN
      - IPC_LOCK
      - SYS_NICE
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    ports:
      - "${EXPOSED_CLICKHOUSE_PORT:-34530}:8123"

  redis:
    image: redis:7.0.10-alpine
    command: redis-server --save 10 1 --loglevel warning
    volumes:
      - redis_data:/data
    ports:
      - "${EXPOSED_REDIS_PORT:-34529}:6379"
    healthcheck:
      test: redis-cli ping

  memcached:
    image: memcached:1.5.22-alpine

  opensearch:
    image: opensearchproject/opensearch:2.13.0
    environment:
      - discovery.type=single-node
      - logger.level=WARN
      - DISABLE_SECURITY_PLUGIN=true
      - DISABLE_INSTALL_DEMO_CONFIG=true
      - OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    init: true
    healthcheck:
      interval: 5s
      timeout: 2s
      retries: 12
      test: curl "opensearch:9200/_cluster/health?wait_for_status=yellow&timeout=2s"

  iqdb:
    image: ghcr.io/e621ng/iqdb:ad5e363879d4e4b80a0821253ae610b7859c5d32
    command: iqdb http 0.0.0.0 5588 /iqdb/iqdb.db
    volumes:
      - iqdb_data:/iqdb

  recommender:
    image: ghcr.io/femboyfans/recommender:b29409d748333c99beb1faf2dc7b902cefdf26cf
    volumes:
      - recommender_data:/recommender/data
    environment:
      - DATABASE_URL=postgres://femboyfans:@postgres/femboyfans_development
      - OPENBLAS_NUM_THREADS=1
      - TRAINING_THREADS=4

  # By default, this is bound to /reports on the same url as the primary app for external access
  # To change this, set the FEMBOYFANS_REPORTS_SERVER env variable
  # For internal access, change the FEMBOYFANS_REPORTS_SERVER_INTERNAL env varable (defaults to http://reports:3000)
  reports:
    image: ghcr.io/femboyfans/reports:823862b91be8fa9d08d8308f83da9eca56649b67
    environment:
      - CLICKHOUSE_URL=http://clickhouse:8123
      - REDIS_URL=redis://redis/1
      - SECRET_KEY=${FEMBOYFANS_REPORT_KEY:-super_secret_key_for_reports_signature}
    ports:
      - "${EXPOSED_REPORTS_PORT:-4002}:3000"
    depends_on:
      clickhouse:
        condition: service_started
      redis:
        condition: service_healthy

  # Useful for development

  tests:
    image: zoobooru
    environment:
      <<: *common-env
      RAILS_ENV: test
    volumes:
      - .:/app
      - ./docker/local_config.rb:/app/config/local_config.rb
      - node_modules:/app/node_modules
    depends_on:
      <<: *common-depends-on
    entrypoint: bundle exec rails test
    profiles:
      - tests

  rubocop:
    image: zoobooru
    volumes:
      - .:/app
      - rubocop_cache:/rubocop_cache
    entrypoint: bundle exec rubocop --cache-root /rubocop_cache
    profiles:
      - rubocop

  linter:
    image: zoobooru
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    entrypoint: yarn run lint
    profiles:
      - linter

volumes:
  post_data:
  iqdb_data:
  opensearch_data:
  db_data:
  redis_data:
  node_modules:
  rubocop_cache:
  recommender_data:
  clickhouse_data:

networks:
  default:
    driver: bridge
    ipam:
      driver: default
    driver_opts:
      com.docker.network.bridge.name: br-zoobooru
